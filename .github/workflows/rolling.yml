# This is a basic workflow to help you get started with Actions

name: Rolling build

# Controls when the workflow will run
on:
  
  push:
    branches: [ main, feature/*, fix/*, release/* ]
    paths-ignore: ['.github/workflows/nightly.yml', '.github/workflows/quality.yml', '.github/workflows/build-dependencies.yml']
    
  pull_request:
    branches-ignore: [ main, feature/*, fix/*, release/* ]
    paths-ignore: ['.github/workflows/nightly.yml', '.github/workflows/quality.yml', '.github/workflows/build-dependencies.yml']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  qt_dir: '${{ github.workspace }}/out/build/qt'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
  
    strategy:
      matrix:
        runsOn: [ "ubuntu-latest", "windows-latest", "macOs-latest" ]
  
    # The type of runner that the job will run on
    runs-on: ${{ matrix.runsOn }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Get branch name
        id: branch_name
        shell: bash
        run: |
          BRANCH=$GITHUB_REF
          echo "branch_slug=${BRANCH////_}" >> $GITHUB_OUTPUT

      - name: Cache
        uses: actions/cache@v3.0.8
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: out/build/*
          # An explicit key for restoring and saving the cache
          key: RollingBuildCI-${{ matrix.runsOn }}-${{ steps.branch_name.outputs.branch_slug }}

      - name: Install CMake
        # You may pin to the exact commit or the version.
        # uses: lukka/get-cmake@2e45cd82cd67abcfd1b61fb17c253b99f8257189
        uses: lukka/get-cmake@latest

      - name: Setup VS Dev Environment
        if: matrix.runsOn == 'windows-latest'
        # You may pin to the exact commit or the version.
        # uses: seanmiddleditch/gha-setup-vsdevenv@adf16e54e207da0da148c8901a98a34d7aa3eb7a
        uses: seanmiddleditch/gha-setup-vsdevenv@v4

      - name: Remove Qt dir
        continue-on-error: true
        shell: bash
        run: rm -r '${{ env.qt_dir }}/'

      - name: Install Qt
        id: install_qt
        uses: jurplel/install-qt-action@v3
        continue-on-error: true
        with:
          version: '6.2.*'
          target: 'desktop'
          dir: ${{ env.qt_dir }}
          install-deps: 'true'
          #modules: 'qtcore qtnetwork qtmultimedia qtserialport qtsvg'
          archives: 'qtbase qtsvg qtimageformats'
          cache: 'false'
          #cache-key-prefix: 'install-qt-action-${{ matrix.runsOn }}'
          setup-python: 'true'
          tools: 'tools_ifw tools_qtcreator,qt.tools.qtcreator'
          set-env: 'true'
          tools-only: 'false'
          #aqtversion: '==2.1.*'
          #py7zrversion: '==0.19.*'
          extra: '--external 7z'

      - name: Configure
        run: cmake --preset x64-debug -DQT_PATH="${{ env.qt_dir }}" .
        
      - name: Build
        working-directory: out/build
        run: cmake --build .