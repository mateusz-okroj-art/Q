# This is a basic workflow to help you get started with Actions

name: Build dependencies

on:

  push:
    paths: /Versions.json

  workflow_dispatch:

jobs:
  
    configure:
    
        runs-on: ubuntu-latest
  
        outputs:
          release_id: ${{ steps.create_release.outputs.id }}
          release_url: ${{ steps.create_release.outputs.upload_url }}
  
        steps:

            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - name: Git checkout
              uses: actions/checkout@v3

            - name: Generate ID
              id: ID
              shell: sh
              run: echo "::set-output name=ID::$(date +'%Y%m%d%H%M%S')"
              
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              with:
                tag_name: ${{ steps.ID.outputs.ID }}
                release_name: Dependencies ${{ steps.ID.outputs.ID }}
                body: Package of dependencies for build.
                draft: false
                prerelease: true

    build:

        needs: [configure]

        strategy:
          matrix:
            runsOn: ['ubuntu-latest', 'windows-latest', 'macOs-latest']

        # The type of runner that the job will run on
        runs-on: ${{ matrix.runsOn }}

        steps:

          - name: Configure VCPKG using CMake
            shell: sh
            run: cmake --preset "install"
            
          - name: Upload Release Asset
            id: upload-release-asset 
            uses: actions/upload-release-asset@v1
            with:
              upload_url: ${{ jobs.configure.outputs.release_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
              asset_path: out/build/install/vcpkg.zip
              asset_name: ${{ matrix.runsOn }}.zip
              asset_content_type: application/zip

    finalize:

        needs: [configure, build]

        runs-on: ubuntu-latest

        steps:

          - name: Git config
            run: |
              git config --global user.name "Github Action"
              git config --global user.email "username@users.noreply.github.com"
              git pull
              
          - name: Update version id
            uses: jossef/action-set-json-field@v2
            with:
              file: Versions.json
              field: Dependencies
              value: ${{ jobs.configure.outputs.release_id }}
              
          - name: Commit new version to Git repo
            run: |
              git add Versions.json
              git commit -m "Updated version of dependencies after build completion."
              git push
