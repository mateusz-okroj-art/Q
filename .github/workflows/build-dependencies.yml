# This is a basic workflow to help you get started with Actions

name: Build dependencies

on:

  workflow_dispatch:

jobs:
  
    configure:
    
        name: Configure Release
    
        runs-on: ubuntu-latest
  
        outputs:
          release_id: ${{ steps.create_release.outputs.id }}
          dependencies_id: ${{ steps.ID.outputs.ID }}
          release_url: ${{ steps.create_release.outputs.upload_url }}
  
        steps:

            - name: Generate ID
              id: ID
              shell: sh
              run: echo "::set-output name=ID::$(date +'%Y%m%d%H%M%S')"
              
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.BUILD_DEPENDENCIES }}
              with:
                tag_name: dependencies-${{ steps.ID.outputs.ID }}
                release_name: Dependencies ${{ steps.ID.outputs.ID }}
                body: Package of dependencies for build.
                draft: false
                prerelease: true

    build:
    
        name: Build VCPKG packages

        needs: [configure]

        strategy:
          matrix:
            runsOn: ['ubuntu-latest'] #, 'windows-latest', 'macOs-latest']

        # The type of runner that the job will run on
        runs-on: ${{ matrix.runsOn }}

        steps:

          - name: Git checkout
            uses: actions/checkout@v3
            
          - name: Remove cache
            shell: bash
            run: |
              if [ -d "out" ]
              then
                rm -r out
              fi

          - name: Install CMake
            # You may pin to the exact commit or the version.
            # uses: lukka/get-cmake@2e45cd82cd67abcfd1b61fb17c253b99f8257189
            uses: lukka/get-cmake@v3.21.2

          - name: Setup VS Dev Environment
            if: matrix.runsOn == 'windows-latest'
            # You may pin to the exact commit or the version.
            # uses: seanmiddleditch/gha-setup-vsdevenv@adf16e54e207da0da148c8901a98a34d7aa3eb7a
            uses: seanmiddleditch/gha-setup-vsdevenv@v4

          - name: Configure Linux
            if: matrix.runsOn == 'ubuntu-latest'
            shell: bash
            run: sudo apt install autoconf-archive libx11-xcb-dev libxkbcommon-dev xcb libxkbcommon-x11-dev libglu1-mesa-dev freeglut3-dev mesa-common-dev
            
          - name: Configure Mac OS
            if: matrix.runsOn == 'macOs-latest'
            shell: bash
            run: |
              echo 'export PATH="/usr/local/opt/bison/bin:$PATH"' >> /Users/runner/.bash_profile
              echo 'export PATH="/usr/local/opt/texinfo/bin:$PATH"' >> /Users/runner/.bash_profile
              brew install autoconf-archive autoconf automake bison cmake gettext gfortran gperf gtk-doc libtool meson nasm ninja pkg-config mono texinfo yasm

          - name: Configure VCPKG using CMake
            id: configure
            shell: sh
            if: failure() || success()
            run: cmake --preset "install"
            
          - name: show error log
            if: failure() || success()
            run: cat /usr/local/share/vcpkg/buildtrees/qtbase/config-x64-linux-out.log
            
          - name: Upload Release Asset
            id: upload-release-asset
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.BUILD_DEPENDENCIES }}
            with:
              upload_url: ${{ needs.configure.outputs.release_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
              asset_path: ./vcpkg.zip
              asset_name: ${{ matrix.runsOn }}.zip
              asset_content_type: application/zip

    finalize:

        name: Update Versions.json

        needs: [configure, build]

        runs-on: ubuntu-latest

        steps:

          - name: Git checkout
            uses: actions/checkout@v3

          - name: Git config
            run: |
              git config --global user.name "Github Action"
              git config --global user.email "username@users.noreply.github.com"
              git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
              
          - name: Update version id
            uses: jossef/action-set-json-field@v2
            with:
              file: Versions.json
              field: Dependencies
              value: ${{ needs.configure.outputs.dependencies_id }}
              
          - name: Commit new version to Git repo
            run: |
              git add Versions.json
              git commit -m "Updated version of dependencies after build completion."
              git push
